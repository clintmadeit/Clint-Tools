#ARG IMAGE=appimagecrafters/appimage-builder
ARG IMAGE=stargate-base

FROM ${IMAGE} as python

RUN apt update && apt install -y \
	build-essential \
	curl \
	python3-dev \
	libbz2-dev \
	libffi-dev \
	libssl-dev

# Install Python3.10 from source, need a supported Python version to use a
# recent PyQt
RUN cd /root/ && \
	curl -s https://www.python.org/ftp/python/3.10.8/Python-3.10.8.tgz | tar xvz
RUN cd /root/Python-3.10.8 && \
	./configure --enable-optimizations && \
	make && \
	make install

FROM ${IMAGE} as portaudio
# Build the latest Portaudio
# Downloads from github get truncated for some reason, so we store it
# in our repo
COPY appimage-assets/portaudio-19.7.0.tar.gz /root/portaudio-19.7.0.tar.gz

RUN cd /root/ && tar xvf portaudio-19.7.0.tar.gz

RUN apt update && apt install -y libasound2-dev libjack-jackd2-dev
RUN cd /root/portaudio-19.7.0/ && \
	./configure --with-alsa --with-jack --prefix=/usr && \
	make && \
	make install


FROM ${IMAGE} as portmidi

RUN apt update && apt install -y build-essential libssl-dev

# Amazingly lame and time consuming, portmidi has a hard dependency on
# having a very recent cmake, so we roll our own
COPY appimage-assets/cmake-3.24.2.tar.gz /root/cmake-3.24.2.tar.gz
RUN cd /root/ && tar xvf cmake-3.24.2.tar.gz
RUN cd /root/cmake-3.24.2/ && ./bootstrap && make && make install

COPY appimage-assets/portmidi-2.0.4.tar.gz /root/portmidi-2.0.4.tar.gz
RUN cd /root/ && tar xvf portmidi-2.0.4.tar.gz
RUN apt install -y libasound2-dev
RUN cd /root/portmidi-2.0.4/ && \
	cmake . -DCMAKE_INSTALL_PREFIX:PATH=/usr && \
	make

# SquashFS Tools, because the latest appimage-builder uses the
# -reproducible flag, which does not exist in older mksquashfs
FROM ${IMAGE} as squashfs-tools
COPY appimage-assets/squashfs-tools-4.5.1.tar.gz  /root/squashfs-tools-4.5.1.tar.gz
RUN cd /root && tar xvf squashfs-tools-4.5.1.tar.gz
RUN sed -i 's/#XZ_SUPPORT = 1/XZ_SUPPORT = 1/g' \
	/root/squashfs-tools-4.5.1/squashfs-tools/Makefile
RUN apt install -y liblzma-dev
RUN cd /root/squashfs-tools-4.5.1/squashfs-tools/ && make

FROM ${IMAGE} as libsndfile

RUN apt update && apt install -y \
	autoconf \
	autogen \
	automake \
	build-essential \
	libasound2-dev \
	libflac-dev \
	libogg-dev \
	libtool \
	libvorbis-dev \
	libopus-dev \
	libmp3lame-dev \
	libmpg123-dev \
	pkg-config

COPY appimage-assets/libsndfile-1.1.0.tar.gz /root/libsndfile-1.1.0.tar.gz
RUN cd /root && tar xvf libsndfile-1.1.0.tar.gz
RUN cd /root/libsndfile-1.1.0/ && \
	autoreconf -vif && \
	./configure --prefix=/usr --enable-werror && \
	make && \
	make install

FROM python as rubberband

RUN apt update && apt install -y \
	autoconf \
	autogen \
	automake \
	build-essential \
	libasound2-dev \
	libflac-dev \
	libogg-dev \
	libtool \
	libvorbis-dev \
	libopus-dev \
	libmp3lame-dev \
	libmpg123-dev \
	pkg-config
COPY --from=libsndfile /root/libsndfile-1.1.0/ /root/libsndfile-1.1.0
RUN cd /root/libsndfile-1.1.0/ && make install
RUN python3 -m pip install meson ninja
RUN cd /root/ && \
	curl https://breakfastquay.com/files/releases/rubberband-3.1.1.tar.bz2 \
	| tar xv --bzip2
RUN cd /root/rubberband-3.1.1 && \
	meson setup --prefix=/usr builddir && \
	cd builddir/ && \
	meson compile

FROM ${IMAGE}

RUN apt update && apt upgrade -y && apt install -y \
	build-essential \
	less \
	vim \
	gcc \
	g++ \
	jq \
	libasound2-dev \
	libjack-jackd2-dev \
	libssl-dev \
	libfftw3-dev \
	zsync

COPY --from=portmidi /root/cmake-3.24.2/ /root/cmake-3.24.2
RUN cd /root/cmake-3.24.2/ && make install

COPY --from=portmidi /root/portmidi-2.0.4/ /root/portmidi-2.0.4
RUN cd /root/portmidi-2.0.4/ && make install

COPY --from=portaudio /root/portaudio-19.7.0/ /root/portaudio-19.7.0
RUN cd /root/portaudio-19.7.0/ && \
	./configure --with-alsa --with-jack --prefix=/usr && \
	make && \
	make install

COPY --from=python /root/Python-3.10.8/ /root/Python-3.10.8
RUN cd /root/Python-3.10.8 && \
	./configure --enable-optimizations --prefix=/usr && \
	make && \
	make install

COPY --from=squashfs-tools \
	/root/squashfs-tools-4.5.1/ \
	/root/squashfs-tools-4.5.1

RUN apt install -y liblzma-dev
RUN cd /root/squashfs-tools-4.5.1/squashfs-tools/ && make install

RUN apt install -y \
	libflac-dev \
	libogg-dev \
	libtool \
	libvorbis-dev \
	libopus-dev \
	libmp3lame-dev \
	libmpg123-dev

COPY --from=libsndfile /root/libsndfile-1.1.0/ /root/libsndfile-1.1.0
RUN cd /root/libsndfile-1.1.0/ && make install

RUN python3 -m pip install meson ninja
COPY --from=rubberband /root/rubberband-3.1.1/ /root/rubberband-3.1.1

